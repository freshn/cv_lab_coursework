function [pos2,acc] = find_matches(I1, pos1, I2)
  %[pos2] = find_matches(I1, pos1, I2)
  %
  % This fuction finds corresponding locations in I2 
  % given certain coordinates pos1 in I1.
  %
  % Paraments:
  % pos2 = corresponding points' n*2 position matrix in second image.
  % I1 = rgb image in double data type.
  % pos1 = n*2 coordinates matrix.
  % I2 = rgb image in double data type (object image).

  
%% Ask if SIFT is needed  
   prompt = ['SIFT would increase the accuracy but decrease t',...
       'cost. Is SIFT needed? y/n [n]:'];
   str = input(prompt,'s');
   if isempty(str)
      str = 'n';
   end
%% Build Points Object  
   tic
   pt1 = cornerPoints(pos1);
   pt1_BRISK = BRISKPoints(pos1);
   pt1_SURF = SURFPoints(pos1);
   
   pt2_H = detectHarrisFeatures(rgb2gray(I2),'MinQuality',0.002);
   pt2_FAST = detectFASTFeatures(rgb2gray(I2),'MinQuality',0.002,...
       'MinContrast',0.1);
   pt2_ORB = detectORBFeatures(rgb2gray(I2),'ScaleFactor',1.1,...
       'NumLevels',20);
   pt2_ORB = cornerPoints(pt2_ORB.Location);
   pt2_SURF = detectSURFFeatures(rgb2gray(I2),'NumScaleLevels',6,...
       'NumOctaves',4);
   pt2_BRISK = detectBRISKFeatures(rgb2gray(I2),'MinQuality',0.002,...
       'MinContrast',0.1,'NumOctaves',3);
   pt2_ME = detectMinEigenFeatures(rgb2gray(I2),'MinQuality',0.002);
   % show numbers of points
   disp(['pos1 numbers:' num2str(size(pos1,1))]);
%% extract features
  disp('extracting features...');
  [f1, vpt1] = extf(I1, pt1);
  [f1_BRISK, vpt1_BRISK] = extf(I1, pt1_BRISK);
  [f1_SURF, vpt1_SURF] = extf(I1, pt1_SURF);
   
  [f2_H, vpt2_H] = extf(I2, pt2_H); 
  [f2_FAST, vpt2_FAST] = extf(I2, pt2_FAST);
  [f2_ORB, vpt2_ORB] = extf(I2, pt2_ORB); 
  [f2_SURF, vpt2_SURF] = extf(I2, pt2_SURF); 
  [f2_BRISK, vpt2_BRISK] = extf(I2, pt2_BRISK); 
  [f2_ME, vpt2_ME] = extf(I2, pt2_ME);
 
%% matching
  disp('matching...');
  [m1_H, m2_H] = match(f1, f2_H, vpt1, vpt2_H);
  [m1_FAST, m2_FAST] = match(f1, f2_FAST, vpt1, vpt2_FAST); 
  [m1_ORB, m2_ORB] = match(f1, f2_ORB,vpt1, vpt2_ORB);
  [m1_SURF, m2_SURF] = match(f1_SURF, f2_SURF,vpt1_SURF, vpt2_SURF);
  [m1_BRISK, m2_BRISK] = match(f1_BRISK, f2_BRISK,vpt1_BRISK, vpt2_BRISK);
  [m1_ME, m2_ME] = match(f1, f2_ME, vpt1, vpt2_ME);
  
%% correct error matches  
  disp('vailding...');
  [vm1_H, vm2_H] = vmatch(m1_H, m2_H);
  [vm1_FAST, vm2_FAST] = vmatch(m1_FAST, m2_FAST);
  [vm1_ORB, vm2_ORB] = vmatch(m1_ORB, m2_ORB);
  [vm1_SURF, vm2_SURF] = vmatch(m1_SURF, m2_SURF);
  [vm1_BRISK, vm2_BRISK] = vmatch(m1_BRISK, m2_BRISK);
  [vm1_ME, vm2_ME] = vmatch(m1_ME, m2_ME);

%% boosting   
  disp('boosting...');
  % build methods list
  vm1_list = {vm1_H, vm1_ORB, vm1_SURF, vm1_BRISK, vm1_FAST, vm1_ME};
  vm2_list = {vm2_H, vm2_ORB, vm2_SURF, vm2_BRISK, vm2_FAST, vm2_ME};
  % harris-sift
  if str == 'y'
      % calculate mag and ang 
      [mag1,ang1]= MagAndAng(rgb2gray(I1));
      [mag2,ang2]= MagAndAng(rgb2gray(I2));
      % get descriptor of pos1
      f1_sift = zeros(size(pos1,1),128);
      for i = 1:size(pos1,1)
          o1_sift = MajorOrientation(mag1,ang1,pos1(i,1),pos1(i,2));
          desc1 = DESC(o1_sift, mag1, ang1);
          f1_sift(i,:) = desc1;
      end
      % get descriptor of pt2_H
      f2_sift = zeros(size(pt2_H.Location,1),128);
      for i = 1:size(pt2_H,1)
          o2_sift = MajorOrientation(mag2,ang2,pt2_H.Location(i,1),pt2_H.Location(i,2));
          desc2 = DESC(o2_sift, mag2, ang2);
          f2_sift(i,:) = desc2;
      end     
      [m1_SIFT, m2_SIFT] = match(f1_sift, f2_sift, pt1, pt2_H);
      [vm1_SIFT, vm2_SIFT] = vmatch(m1_SIFT, m2_SIFT);
      % build methods list
      vm1_list = {vm1_H, vm1_SIFT, vm1_ORB, vm1_SURF, vm1_BRISK, vm1_FAST, vm1_ME};
      vm2_list = {vm2_H, vm2_SIFT, vm2_ORB, vm2_SURF, vm2_BRISK, vm2_FAST, vm2_ME};
  end  
  % select main method 
  a = 0;
  for i = 1:length(vm1_list)
      if size(vm1_list{i},1)>a
          a = size(vm1_list{i},1);
          vm1 = vm1_list{i};
          vm2 = vm2_list{i};
          method_index = i;
      end 
  end  
  disp(['selected method:' num2str(method_index)]);
  disp(['first matched numbers:' num2str(size(vm1,1))]);
  
%% return pos2  
   pos2 = zeros(size(pos1));
  % check whether vm1 is in pos1 and return index
  [~, index] = ismember(vm1.Location,pos1,'rows'); 
  pos2(index,:) = vm2.Location;
  % boosting
  for j = 1:length(vm1_list)
      if j ~= method_index
          vmloc = vm1_list{j}.Location;
          [F, ~] = ismember(vmloc, vm1.Location, 'rows');
          vmloc(F(:),:) = [];
          if size(vmloc,1) ~= 0
              [~,index_rest] = ismember(vmloc,pos1,'rows');
              pos2(index_rest,:) = vmloc;
          end    
      end    
  end
  % get matched numbers
  mnum = zeros(size(pos2));
  mnum(pos2(:,1)==0,:) = [];
  disp(['perfect matched numbers:' num2str(size(mnum,1))]);
  acc = size(mnum,1)/size(pos1,1);
  pos2(pos2(:,1)==0,1) = pos1(pos2(:,1)==0,1)*size(I2,2)/size(I1,2);
  pos2(pos2(:,2)==0,2) = pos1(pos2(:,2)==0,2)*size(I2,1)/size(I1,1);
  disp(['final matched numbers:' num2str(size(pos2,1)) 10]);
%% show matches 
  width = size(I1,2)*0.7;height = size(I1,1)*0.7;
  figure;set(gcf,'position',[50,0,width,height]);
  subplot(221);axis tight;
  set(gca,'YDir','reverse');
  imagesc(rgb2gray(I1));colormap('gray');hold on
  plot(pos1(:,1),pos1(:,2),'y+','LineWidth',2);
  subplot(222),imagesc(rgb2gray(I2));hold on
  plot(pos2(:,1),pos2(:,2),'y+','LineWidth',2);
  subplot(2,2,[3,4]),
  showMatchedFeatures(I1,I2,pos1,pos2,'montage');
  toc
end

%% utlization
function [feature, vpt] = extf(I, pt)
% extract features
    [feature, vpt] = extractFeatures(rgb2gray(I), pt,'FeatureSize',128);
end
function [matched1, matched2] = match(feature1, feature2, vpt1, vpt2)
    indexPairs = matchFeatures(feature1,feature2,'Method',...
          'NearestNeighborSymmetric','MatchThreshold',85); 
     matched1 = vpt1(indexPairs(:,1));
     matched2 = vpt2(indexPairs(:,2));  
end
function [vmatched1, vmatched2] = vmatch(m1, m2)
% find vaild matched
      [~,vmatched1,vmatched2,~] = estimateGeometricTransform...
      (m1,m2,'similarity','MaxNumTrials',4500,...
      'MaxDistance',90,'Confidence',80);
end